#pragma once

#define TA_CONTAINER_CREATE(STATUS, CONTAINER, TAG, DATA) \
  block; \
    use, intrinsic :: iso_c_binding, only: c_loc, c_int64_t; \
    use tagarray, only: get_type_id; \
    if (size(shape(DATA)) == 0) then; \
      STATUS = CONTAINER%create(TAG, get_type_id(DATA), (/ 1_c_int64_t /), c_loc(DATA)); \
    else; \
      STATUS = CONTAINER%create(TAG, get_type_id(DATA), shape(DATA, kind=c_int64_t), c_loc(DATA)); \
    end if; \
  end block

#define TA_CONTAINER_CREATE_OPTIONAL(STATUS, CONTAINER, TAG, DATA, __VA_ARGS__) \
  block; \
    use, intrinsic :: iso_c_binding, only: c_loc, c_int64_t; \
    use tagarray, only: get_type_id; \
    if (size(shape(DATA)) == 0) then; \
      STATUS = CONTAINER%create(TAG, get_type_id(DATA), (/ 1_c_int64_t /), c_loc(DATA), __VA_ARGS__); \
    else; \
      STATUS = CONTAINER%create(TAG, get_type_id(DATA), shape(DATA, kind=c_int64_t), c_loc(DATA), __VA_ARGS__); \
    end if; \
  end block

#define TA_CONTAINER_GET_VALUE(CONTAINER, TAG, DATA, STATUS) \
  block; \
    use, intrinsic :: iso_c_binding, only: c_f_pointer, c_int32_t; \
    use tagarray, only: recordinfo_t, TA_CONTAINER_RECORD_NOT_FOUND; \
    type(recordinfo_t) :: record_info; \
    STATUS = TA_CONTAINER_RECORD_NOT_FOUND; \
    if (CONTAINER%contains(TAG)) then; \
      record_info = CONTAINER%get(TAG); \
      STATUS = record_info%get_status(get_type_id(DATA), 1_c_int32_t); \
      call c_f_pointer(record_info%data, DATA); \
    end if; \
  end block

#define TA_CONTAINER_GET_ARRAY(CONTAINER, TAG, DATA, STATUS) \
  block; \
    use, intrinsic :: iso_c_binding, only: c_f_pointer, c_int32_t; \
    use tagarray, only: recordinfo_t, TA_CONTAINER_RECORD_NOT_FOUND; \
    type(recordinfo_t) :: record_info; \
    STATUS = TA_CONTAINER_RECORD_NOT_FOUND; \
    if (CONTAINER%contains(TAG)) then; \
      record_info = CONTAINER%get(TAG); \
      STATUS = record_info%get_status(get_type_id(DATA), size(shape(DATA), kind=c_int32_t)); \
      call c_f_pointer(record_info%data, DATA, record_info%dims); \
    end if; \
  end block
